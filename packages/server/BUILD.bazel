load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load("@npm//@bazel/typescript:index.bzl", "ts_project")
load("@io_bazel_rules_docker//nodejs:image.bzl", "nodejs_image")

ts_project(
    name = "server",
    # glob is a quick way to select all the code,
    # but has performance penalty in that Bazel must evaluate it.
    srcs = glob(
        include = ["*.ts"],
        exclude = ["*.spec.ts"],
    ),
    declaration = True,
    declaration_map = True,
    tsconfig = "//:tsconfig",
    visibility = ["//visibility:public"],
    deps = [
        "//packages/add:lib",
        "//packages/core:lib",
        "@npm//@types/express",
        "@npm//express",
    ],
)

nodejs_binary(
    name = "bin",
    data = [
        ":server",
    ],
    entry_point = ":index.ts",
)

nodejs_image(
    name = "image",
    binary = "bin",
    include_node_repo_args = False,
    node_repository_name = "nodejs_linux_amd64",
)
